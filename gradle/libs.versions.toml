[versions]
# Build Environment
gradle = "8.14.3"
agp = "8.13.0"  # Latest stable AGP version compatible with Java 24

# AndroidX
androidxTestExtJunit = "1.2.1"
coreKtx = "1.13.1"
appcompat = "1.7.1"
activityCompose = "1.10.1"
navigationCompose = "2.9.2"
lifecycle = "2.9.2"
room = "2.9.2"
workManager = "2.10.2"
datastore = "1.1.7"
securityCrypto = "1.1.0-beta01"

# Kotlin
kotlin = "2.2.0"
ksp = "2.2.0-2.0.2"
kotlinxCoroutines = "1.10.2"
kotlinxSerialization = "1.9.0"
kotlinxDatetime = "0.7.1-0.6.x-compat"

# Compose
composeBom = "2025.07.00"
composeCompiler = "1.9.0"
material3 = "1.3.2"
material = "1.12.0"

# Hilt
hilt = "2.57"
hiltNavigationCompose = "2.57"
hiltWork = "2.57"
hiltCompiler = "2.57"

# Firebase
googleServices = "4.4.3"
firebaseCrashlyticsPlugin = "3.0.4"
firebasePerfPlugin = "1.4.2"
firebaseBom = "33.16.0"

# Network
retrofit = "3.0.0"
retrofitKotlinxSerialization = "1.0.0"
okhttp = "5.1.0"
okhttpLoggingInterceptor = "5.1.0"
gson = "2.10.1"

# Image Loading & Animation
coilCompose = "2.7.0"
lottie = "6.4.0"

# Logging
timber = "5.0.1"

# Testing
junit = "5.13.3"
junitExt = "1.2.1"
espressoCore = "3.6.1"
mockk = "1.14.5"

# Static Analysis
detekt = "1.23.6"

# OpenAPI
openapiGenerator = "7.14.0"

# Oracle Drive
oracleStorage = "1.5.0"
oracleCore = "2.0.0"
oracleDrive = "1.0.0"

[plugins]
# Android
android-application = "com.android.application:${agp}"
android-library = "com.android.library:${agp}"

# Kotlin
kotlin-android = "org.jetbrains.kotlin.android:${kotlin}"
kotlin-kapt = "org.jetbrains.kotlin.kapt:${kotlin}"
kotlin-serialization = "org.jetbrains.kotlin.plugin.serialization:${kotlin}"
ksp = "com.google.devtools.ksp:${ksp}"

# Hilt
hilt-android = "com.google.dagger.hilt.android:${hilt}"

# Google Services
google-services = "com.google.gms.google-services:${googleServices}"
firebase-crashlytics = "com.google.firebase.crashlytics:${firebaseCrashlytics}"
firebase-perf = "com.google.firebase.firebase-perf:${firebasePerf}"

# Detekt
detekt = "io.gitlab.arturbosch.detekt:${detekt}"

# OpenAPI
openapi-generator = "org.openapi.generator:${openapiGenerator}"

# Lottie
lottie = "com.airbnb.android.lottie.compose:${lottie}"

[bundles]
# Compose
compose = [
    "compose-bom",
    "compose-ui",
    "compose-ui-graphics",
    "compose-ui-tooling-preview",
    "compose-material3",
    "androidx-activity-compose",
    "navigation-compose",
    "lifecycle-viewmodel-compose",
    "lifecycle-runtime-compose"
]

# Testing
test = [
    "junit-jupiter-api",
    "junit-jupiter-engine",
    "junit-ext",
    "espresso-core",
    "mockk-android",
    "mockk-agent"
]

# Network
network = [
    "retrofit",
    "retrofit-converter-kotlinx-serialization",
    "okhttp",
    "okhttp-logging"
]

# Room
room = [
    "room-runtime",
    "room-ktx"
]

# Lifecycle
lifecycle = [
    "lifecycle-runtime-ktx",
    "lifecycle-viewmodel-compose",
    "lifecycle-runtime-compose"
]

# Hilt
hilt = [
    "hilt-android",
    "hilt-navigation-compose"
]

# Firebase
firebase = [
    "firebase-analytics",
    "firebase-crashlytics",
    "firebase-perf"
]

# Lottie
lottie = [
    "lottie-compose"
]


[libraries]
# AndroidX Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }

desugar-jdk-libs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "desugajdklibs" }

# Lifecycle
lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycle" }

# Compose
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }


compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" }


# Navigation
navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }

# Hilt
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
hilt-work = { group = "androidx.hilt", name = "hilt-work", version.ref = "hiltWork" }

# Room
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }

# WorkManager
work-runtime-ktx = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "work" }

# Firebase
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics-ktx" }
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics-ktx" }
firebase-perf = { group = "com.google.firebase", name = "firebase-perf-ktx" }

# Network
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }

retrofit-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofitConverterGson" }
retrofit-converter-scalars = { group = "com.squareup.retrofit2", name = "converter-scalars", version.ref = "retrofitConverterScalars" }
retrofit2-kotlinx-serialization-converter = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "retrofitKotlinxSerializationConverter" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttpLoggingInterceptor" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }

retrofit-converter-kotlinx-serialization = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "retrofitKotlinxSerialization" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-logging = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }

# Image Loading
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }

# Animation
lottie-compose = { group = "com.airbnb.android", name = "lottie-compose", version.ref = "lottie" }

# Logging
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }

# OracleDrive Integration
oracle-drive-core = { group = "dev.aurakai.oracledrive", name = "oracle-core", version.ref = "oracleCore" }
oracle-drive-storage = { group = "dev.aurakai.oracledrive", name = "oracle-storage", version.ref = "oracleStorage" }
oracle-drive-ai = { group = "dev.aurakai.oracledrive", name = "oracle-ai", version.ref = "oracleDrive" }
datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "datastore" }
security-crypto = { group = "androidx.security", name = "security-crypto", version.ref = "securityCrypto" }


# Testing
junit-jupiter-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }
junit-ext = { group = "androidx.test.ext", name = "junit", version.ref = "junitExt" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }
mockk-android = { group = "io.mockk", name = "mockk-android", version.ref = "mockk" }
mockk-agent = { group = "io.mockk", name = "mockk-agent-jvm", version.ref = "mockk" }
junit4 = { group = "junit", name = "junit", version = "4.13.2" }

# Detekt
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }

# Compose Accompanist
accompanistPager = { module = "com.google.accompanist:accompanist-pager", version = "0.36.0" }
accompanistPermissions = { module = "com.google.accompanist:accompanist-permissions", version = "0.37.3" }
accompanistSystemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version = "0.36.0" }
desugarjdklibs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugajdklibs" }
[plugins]
# Android plugins
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
"kotlin-android" = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
"kotlin-compose" = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
"kotlin-serialization" = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
"google-services" = { id = "com.google.gms.google-services", version.ref = "googleServices" }
"firebase-crashlytics" = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsPlugin" }
"firebase-perf" = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfPlugin" }
"openapi-generator" = { id = "org.openapi.generator", version.ref = "openapiGeneratorPlugin" }
auraApp = { id = "dev.aurakai.auraframefx", version = "1.0" }

kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinKapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# Hilt
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }

# Firebase
googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }
firebaseCrashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsPlugin" }
firebasePerf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfPlugin" }

# OpenAPI
openapiGenerator = { id = "org.openapi.generator", version.ref = "openapiGeneratorPlugin" }

# Other
auraApp = { id = "dev.aurakai.auraframefx", version = "1.0" }
detekt = { id = "io.gitlab.arturbosch.detekt", version = "1.23.1" }
kover = { id = "org.jetbrains.kotlinx.kover", version = "0.6.1" }
desugarJdkLibs = { id = "com.android.tools.desugar_jdk_libs", version = "2.1.3" }
[bundles]
room = ["room-runtime", "room-ktx"]
lifecycle = ["lifecycle-runtime-ktx", "lifecycle-viewmodel-compose", "lifecycle-runtime-compose"]
firebase = ["firebase-bom", "firebase-analytics", "firebase-crashlytics", "firebase-performance"]
testing-unit = ["junit-api", "mockk-agent"]
testing-android = ["androidx-test-ext-junit", "espresso-core", "mockk-android", "hilt-android-testing"]
compose = [
    "compose-bom",
    "compose-ui",
    "compose-ui-graphics",
    "compose-ui-tooling-preview",
    "compose-material3",
    "androidx-activity-compose",
    "navigation-compose",
    "lifecycle-viewmodel-compose",
    "lifecycle-runtime-compose",
    "accompanistPager",
    "accompanistPermissions",
    "accompanistSystemuicontroller"
]


